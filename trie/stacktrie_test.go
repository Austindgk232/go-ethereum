package trie

import (
	"bytes"
	"fmt"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/ethereum/go-ethereum/rlp"
	"math/big"
	mrand "math/rand"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/crypto"
	"github.com/ethereum/go-ethereum/ethdb/memorydb"
)

func TestSizeBug(t *testing.T) {
	st := NewStackTrie(nil)
	nt, _ := New(common.Hash{}, NewDatabase(memorydb.New()))

	leaf := common.FromHex("290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563")
	value := common.FromHex("94cf40d0d2b44f2b66e07cace1372ca42b73cf21a3")

	nt.TryUpdate(leaf, value)
	st.TryUpdate(leaf, value)

	if nt.Hash() != st.Hash() {
		t.Fatalf("error %x != %x", st.Hash(), nt.Hash())
	}
}

func TestEmptyBug(t *testing.T) {
	st := NewStackTrie(nil)
	nt, _ := New(common.Hash{}, NewDatabase(memorydb.New()))

	//leaf := common.FromHex("290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563")
	//value := common.FromHex("94cf40d0d2b44f2b66e07cace1372ca42b73cf21a3")
	kvs := []struct {
		K string
		V string
	}{
		{K: "405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace", V: "9496f4ec2bf9dab484cac6be589e8417d84781be08"},
		{K: "40edb63a35fcf86c08022722aa3287cdd36440d671b4918131b2514795fefa9c", V: "01"},
		{K: "b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6", V: "947a30f7736e48d6599356464ba4c150d8da0302ff"},
		{K: "c2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b", V: "02"},
	}

	for _, kv := range kvs {
		nt.TryUpdate(common.FromHex(kv.K), common.FromHex(kv.V))
		st.TryUpdate(common.FromHex(kv.K), common.FromHex(kv.V))
	}

	if nt.Hash() != st.Hash() {
		t.Fatalf("error %x != %x", st.Hash(), nt.Hash())
	}
}

func TestValLength56(t *testing.T) {
	st := NewStackTrie(nil)
	nt, _ := New(common.Hash{}, NewDatabase(memorydb.New()))

	//leaf := common.FromHex("290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563")
	//value := common.FromHex("94cf40d0d2b44f2b66e07cace1372ca42b73cf21a3")
	kvs := []struct {
		K string
		V string
	}{
		{K: "405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace", V: "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"},
	}

	for _, kv := range kvs {
		nt.TryUpdate(common.FromHex(kv.K), common.FromHex(kv.V))
		st.TryUpdate(common.FromHex(kv.K), common.FromHex(kv.V))
	}

	if nt.Hash() != st.Hash() {
		t.Fatalf("error %x != %x", st.Hash(), nt.Hash())
	}
}

func genTxs(num uint64) (types.Transactions, error) {
	key, err := crypto.HexToECDSA("deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef")
	if err != nil {
		return nil, err
	}
	var addr = crypto.PubkeyToAddress(key.PublicKey)
	newTx := func(i uint64) (*types.Transaction, error) {
		signer := types.NewEIP155Signer(big.NewInt(18))
		tx, err := types.SignTx(types.NewTransaction(i, addr, new(big.Int), 0, new(big.Int).SetUint64(10000000), nil), signer, key)
		return tx, err
	}
	var txs types.Transactions
	for i := uint64(0); i < num; i++ {
		tx, err := newTx(i)
		if err != nil {
			return nil, err
		}
		txs = append(txs, tx)
	}
	return txs, nil
}

func TestDeriveSha(t *testing.T) {
	txs, err := genTxs(0)
	if err != nil {
		t.Fatal(err)
	}
	for len(txs) < 1000 {
		exp := types.DeriveSha(txs, newEmpty())
		got := types.DeriveSha(txs, NewStackTrie(nil))
		if !bytes.Equal(got[:], exp[:]) {
			t.Fatalf("%d txs: got %x exp %x", len(txs), got, exp)
		}
		newTxs, err := genTxs(uint64(len(txs) + 1))
		if err != nil {
			t.Fatal(err)
		}
		txs = append(txs, newTxs...)
	}
}

func BenchmarkDeriveSha200(b *testing.B) {
	txs, err := genTxs(200)
	if err != nil {
		b.Fatal(err)
	}
	var exp common.Hash
	var got common.Hash
	b.Run("std_trie", func(b *testing.B) {
		b.ResetTimer()
		b.ReportAllocs()
		for i := 0; i < b.N; i++ {
			exp = types.DeriveSha(txs, newEmpty())
		}
	})

	b.Run("stack_trie", func(b *testing.B) {
		b.ResetTimer()
		b.ReportAllocs()
		for i := 0; i < b.N; i++ {
			got = types.DeriveSha(txs, NewStackTrie(nil))
		}
	})
	if got != exp {
		b.Errorf("got %x exp %x", got, exp)
	}
}

type dummyDerivableList struct {
	len  int
	seed int
}

func newDummy(seed int) *dummyDerivableList {
	d := &dummyDerivableList{}
	src := mrand.NewSource(int64(seed))
	// don't use lists longer than 4K items
	d.len = int(src.Int63() & 0x00FF)
	d.seed = seed
	return d
}
func (d *dummyDerivableList) Len() int {
	return d.len
}
func (d *dummyDerivableList) GetRlp(i int) []byte {
	src := mrand.NewSource(int64(d.seed + i))
	// max item size 4k, at least 1 byte per item
	size := 1 + src.Int63()&0x00FF
	data := make([]byte, size)
	_, err := mrand.New(src).Read(data)
	if err != nil {
		panic(err)
	}
	return data
}

func printList(l types.DerivableList) {
	fmt.Printf("list length: %d\n", l.Len())
	fmt.Printf("{\n")
	for i := 0; i < l.Len(); i++ {
		v := l.GetRlp(i)
		fmt.Printf("\"0x%x\",\n", v)
	}
	fmt.Printf("},\n")
}

func xTestDeriveShaLongtime(t *testing.T) {
	for i := 0; i < 10; i++ {
		exp := types.DeriveSha(newDummy(i), newEmpty())
		got := types.DeriveSha(newDummy(i), NewStackTrie(nil))
		if !bytes.Equal(got[:], exp[:]) {
			printList(newDummy(i))

			t.Fatalf("seed %d: got %x exp %x", i, got, exp)
		}

	}
}

type flatList struct {
	rlpvals []string
}

func newFlatList(rlpvals []string) *flatList {
	return &flatList{rlpvals}
}
func (f *flatList) Len() int {
	return len(f.rlpvals)
}
func (f *flatList) GetRlp(i int) []byte {
	return hexutil.MustDecode(f.rlpvals[i])
}

// TestDerivableList contains testcases found via fuzzing
func TestDerivableList(t *testing.T) {
	type tcase []string
	tcs := []tcase{
		{
			"0xc041",
		},
		{
			"0x4f163f5f0f9a621d729566c74d10037c4d7bbb0407d1e2c64981855ad8681d0d86d1e91e00167939cb6694d2c422acd208a0072939487f6999eb9d18a44784045d87f3c67cf22746e995af5a25367951baa2ff",
			"0x6f3144c0aa4ced56dbd967dc2897806af3bed8a63aca16e18b686ba0dc208cfece65bd70a23da0026b66108fbad08443",
			"0x9004a531f967898df5319ee02992fdd84021fa5052434bf6ee214b5fdf1409fc2b8a0a521c221bacb1bca8a3c1495ddbfbdc0b7d75b87b9cf75860b72bbef59336471c22e5d677c563eece4dd88ae65655e5a094e9cef2fb2774b795b2e4e12e15edb17907cfe1c307a187e3a99ae6ed15628da806c3b41d82393d72c9537c8275f85650e1da",
			"0xaf00ca81d4fe11c23e8eb6752e1f9ad716c61fc24f2d80c04189b3a4c3f477689d0ac9a542f9b174192a2c16da483de16a3a093f9107cdc35f97f4378037ad8aa15ea7c95db087c51c99644230bb8f8b6243b21cdcc015237564a9fb2ac359aa7ab99544cd62e240885533aed411c87c530b7107321db580938d8b78eb063b5c3c4f18926cba3bc05a65244dab6d79345fe5e99adf9ddd3d1dbfe5db7f8f20aacd5ce70992f8161755f872054a64703dbfbab3be3dc57fcb075ef625033f810cdaa9543319e2060bdfa691e8b9248908ff36166831f598772652d13d4a943b5f3e132e",
			"0xcf532d9b2ce282fad85af699815c18c595ea804462a794f75123135cc728c43daa5aa248d5a17dde4906843049a995cbd0b80d23694897467e10e43cb2ef4662aceef9304835d744e43af04165e3d13cd1f7b9adead9e072bca6ae92fbb52cc2f48f89ae44e020c506fa047bf7e8bf5a51a3054dbba8bef4c40fe97c737b7c8f72adda57c4a29edf179f02f3d0bfd3eafd8e7733b84037ea87984e250ae0406a71b3b02679e34b30c8bc5f731e1598e7bf36ebef7d2464642faaf1cb2e558fd472",
			"0xf06e50dbd3e81b2242314ba86c2b962f6c0b9e0e91a0",
			"0x182215aaee06a2d64b6d1aadc9e5031e4b99bf11ae0a796ebc44c85fd174bfccf43cb5f561cd0040e8566209385c6601ddb3fc1472b881d99c8428183c3fae7166ecbd7cc3ba26c55e2f5169c92f2f4691fae28d00f74ecaf24ca41c0d577477c4b2615a7b07d8dd0abb8f6026f0560c8be735092e6fd1322668df4d6b15c52422554e2ca75f2c30531c00dd92d4e7d5b2c494d150ad051371aed6b0eae1a7723c552f2a15b56f9129d9e3115d909e05ac788f4fdee8cf81def8e1fa903b13363e45f90dd7afadeadf2034f49bd58cf46e9f6e9e858935a98423b94884d844619001f27bfb101f0737b6b793a57890d5056c85a2",
			"0x4f1cd6fdfc633c0fa6d58f41c06e609c1054e40bab03aeed1a6c42a5b424ae38421a8457d894a5593bd1da7f90fa45603d51ff78d8078998d0bbaa2890d02c28b17bcb212775664518ccc4630658ec76ec",
			"0x702fc91d5829f4464feef626abe35e0a4ff22575ba7dc2e583259865b82a6b975a76c3aa8119b3a3a72c369836771e1bc52f01797838894c0ff61f190400e00fc0acfad9abd67e485f7470aa7f841f6d18f9d8eba9234daa2071283413e05c0d8be8197e6c201eda08f413e610bf947684ec3b465f40fdc9869ee29c5b74ed20bfb692ff8518faf01335fdbc5c21c35e8f51f4371f48c3b34b84291599ec1fe67db0e51e084756",
			"0x906aeeb7f09e757ba9f6663b9f6a5bf8611d6306f677f67ebd2c809fbc7e3991c8ab560d1431fa8b6f25be4ab50977f0294dfeca9677866b6e756e335a8778f6aadb2cc18c5bc68892da05a4d8b458eee5ce3335a024000c674b118bd31ed2c4eeb81dc9e3919e9989994333fe36f147c2930f12c53f0d3c78d0122166752d729620d411",
			"0xb07d51a817ee07c3f2145935bc7155e3c7a76490c3e0aa0b6a665862c32ef87919d0991f7af85e953b74428fef5b57789bc9022fd4c8f9319da9d29a8e7d391ef60b36652ef9c6c737e1b1c118e00c63866bc4e9be56fb22b505",
			"0xc859963733b8a6fb1c29a0cac8f67261055faa92fdd9e3558eceb7a3a6b25473f6326cb924fd69ef3feadae9c6ec4f8232c7f2dede070d",
			"0xf04cf757812428b0763112efb33b6f4fad7deb445e",
			"0x19a80a59dc6a9be7ff11b603cbfb5d3ddc7a28b24e3d2ca52510f99ead3e40f1703b80afc1c8ef60b842f8c0a33300a00743f4b49c775439f35896ba68db5b943ae22868543c2d888d8968059075a5dca5c3a962b764bd5f5200082eebf880500097ad28b8dfbc8a82b34a20891cb965f45d264a673b30523a0fbf387c667e03732fca39b6f52e7e4c02582a857589bc291659d0535f8d39970c9d26533f05d6afc4e85f5b912cf9f4df411f6dce9a89864ed89e0a560ed43b20cf1ee2dc105ca36f4e3061e917ef5af5ebac7e23c5c6f6e977ed55cced77812ee0ac40fa310bc0b157cf7800618ed21e",
			"0x10a2ef6534312d205aaa1a08609e5aacf2572a3c21b660fc5007b95cb1be0ea6cd6f539157d0433b0819703b74cf6092a241367533c959c41fcef0d99afdbb7b89f157d170c075c7",
			"0x309512765baac04483f07c96dc5eb82660704f9e5aaf159332b154a698860bcc37251ae4b9681ec481930c4cfa693823fc9ff3d6450813e3860ed14bee086db3b4414e75d45bb5474eaac90f43ce9292bf41a77e50912bb76f7a89aa347a5de10cb8854d7838fb347feccf45532353d6f15ed6a21be75ce87aa5b3023b3da610b1383e799cbaf84e611b9d154f82f45b0879fae628cc51dafd2323b2e6486e038023a75271",
			"0x59700717777c4b7ccd2cc67bbd263514a5aab010b02a0acd27e8745c9c486a9d544c64c7e3ebc9ac67eb8404e33431ee6bfc35cb9f30cdd7c547ee59e2382f8a7f7f172d6b01cd4a758375719efac3565988f80246b43642d5c0715dadac8a7d908c599fdd9e31fefe117da0591a41a22cfad9eee5ab6fdcca5797",
			"0x70838ab204f288b46629d78f0868b382d32bce86a7135aa2201256629eb81698251731215a74a33638dce81c9b95119208dae7fa9b872351f47d586a381dd9858e7fe6d0cd880d8be61409c59d227d75775475a575ce093c92367fb4397b70b71ce95d79851192a67dc54e5b21721c812ba52e948d656c37dc1b459493a36705ce1882bf8073b2f1cbb850fa19cf56cbacbed104b7a61dbb2800f615a59bd59ec4ad5d3728d537bdf7511ff7635bb0485486ab6d678b804765ddba65a3c04c5c0a1f8e89d9c9ba121e40376b838495f2fa272ca6e87cc9cf",
			"0x89bf6ba360590e69d06d6b941b2c308178c4ef2c828c8ecc07aa4a99a28c45a48e0d0034fc4b9c10182d2f9d6281e9845b1825cdb3c87a75d4bd38556cf28f1cb96e0fb873e815cabdf1767fe04eb29a20ab27f36bbf38d3d90a6bdaf23d9c33c4cb3144afbf9850fa6a7a88cbe9aa59283f40d258bf7cda2d0e115a945a2fdf543eb477cf52195f3673127c376953a94abf730d9aeb9adf29e513088db83527ea882f001bc0c698a80afb2aaa3c",
			"0xb1d2f091785e9ca0ea15c7",
			"0xd9ad8b51bf6a35a933d44053e66c37dd4bb6751207f037f2e5caf99d8db800e2fc4bdfe9f84759828a874e7e77c8191176942921f4381d742a69bc14ee4bdeeb92d6770365c44c4b00c5b5aab5981f30122de9267d1c67a30faf6ae40b8785e42bee09e8c3d257cc15",
			"0x09a1ae301b83bfdd9dfc4778e5fcb4d751989390c1e98b6a9bb4156491980f4b6ad6214c9f9fb05b9af9c6b6f120fa92ceb0e8e47088e38d99aa807d429a",
			"0x319bf39f28aa391537550f0daf6b92564fdfb44dda63c06962ccb39d",
			"0x59ee948e4413ce4e81b12a11b13b8fc45606daab4f5cf9c183f4595f7fc4da8f904cb6f83babb5bd77499aff4e32cb9fd72c1d47b5f8a1c9fd57e3aad098cab1d7f42ac8f98ec44944d08ab8471d373a04a036b7254a50639429d5d3ca963a96eeecc5de6aeceee6960859604a474b1899278994e2f4c9e3c28e96f69f49df21792cf04d3f30cebb3243baca681da2bf86784b5ed9452965d5ad57c1b98f2df991e8313d9fcdc075d38c74a89f074ba2663c1e7ff17c69806f34a4e3bea79ba9f51cc5197960719aedb28273c7c96579fb625fe220b386f2de47cbfc19559adbce5354d537fceaafa67daf0f6d689c8b1b4e0ac5f456a1857f",
			"0x71e9a94ddcec56059bf9d625b4f58cb2de861b4165c6edda2baedc9f8322879ec17d0b5cd68f02188ca07ed87eda2a0a388a1a9b3e372128ec95863403835f9942e568703e0d1c4a194d18698049f87a297ee33f1b64e3f3e18be4465bd90b6e5ac89948a29f752719be093b061e26e394cf0c8dc9cfc95614f361fe22be20e58e46e12fcc1833cb2f9fda708daf88f623ebd987c0fad2f1237774b3115d5bcdb7233babb7b8f5a777515d80738fb00d6bdc779ca1ff3e15d77fa72dec9ccd411b4b254e53f184c0989cea2aea4914",
			"0x89bccc8d4364e82a04102203593f8aa0334349071bc0a1d7d4557a5d8ad6d5101b65d3ae3bc76831f892f556064b032bc8a81e6d4c88ace02bd0ce6b9707167f91346523f36f3c8d5c2ecc38eb8925bf53e28da44a4f8dea3826c9dcd3df4a08d49d9d022b11b62a9e5ad5a5cc9563c19368d1065552df79232739c34803e8bf4571b34720f59b4ec6604dbc2aaa14a5539ceedc9c0d07f6f37ce3fc79b793c8618ae861bf9f07e267d1188a",
			"0x3ad8",
			"0x5a0ba54f6d7c269ae758f99d28c9d509d5ad8fd2ac222b37a456d461719241c8d96aea23d8e232a30466d429a5b2d3e3a4231e81c1f82f9c8243e9eb1ed7888e87f2cf723c5dabcd3ef308dc76de9176063584b7548a6b466f99c576e928d2",
			"0x492666d00809c1ce118ddbb2424952f83a37ad30c19c1f910290239f74626e37f62baec67ebbe16c8c455c3afd89b40b316120b3fd47b9f3f1ba467354",
			"0x72204b21603d4a076b1527d75d26cf6528780e1e70964f88f777445d785adc70bfc6bc6011e306c5f8b6f8b4fb070dc0933f12630e89f4770df584ebaa62972de1516b00593d0b8d97e1299fcc3a7f6c0d377def69b7a9068c1c4c8333d2ff707ff32d63c1c8b36f995d49736feb08e40530b81db3211b9fc7a357a0a9b5d1be0274abfadc756d8fe1ee34ccb663e2845eb7",
			"0x9ad30f524750dbbef4f528643e6b29e44f1434bcc60fa40e74b1baa95f0e9bc61c4b87b37be66bdee78a70b93285e4a5079def9635b8a4b1542c71e4deca46058c3afab31ddbebccce08de880e62b1305bb9e153d7b98c8bf31f32e6abfcc24a33c9214c8712b2f61401166ea8424379",
			"0xb1ee3002a37a51035facef6523ed27cf7d2735ba00f850670a390d6463e6d7f28d6656951d9fb138fd07939baa98c4a998fb314951f9954e4368c9dd3273073c9b39465c1b961b4c787e8bc99083de81b637a2f6d2b3071a41a341fc34b372e6d198050790a2f2f192bdc5aa6bc2344d0235390d64042bf5e71927ed3740d9d310f51e9dc3b237981e8dc1a780f06d613b8f9cb7c31cd1a8ce1f44284a93b9fc3686bca0b395522a43174b9c0b4baba14562cffd578a4d833cad0ee3c83c9b609f9523dea92a2f8ac9506002db",
			"0xca410605310cdc3bb8d4977ae4f0143df54a724ed873457e2272f39d66e0460e971d9d",
			"0xfa3d47844c536f73c2106a5f8873112b031db4b0cc6c79e8d89acf5c6a98a3dff36566cbbdaa7eaab759a62aca1496416735319d05812947a2f9481d7b13530b11282d67e31a6a90b4aeca442bd7cb2a4c2a4003e8fec5f9759638158e2c35bcf9cadd42656cc9cb90665020ffd0f0f43a760d86d7d14d8c67d02f3cfeb0e2d0cd2ce111886b195b4d8650b44265014b116a3d5558599081f9ed47ac4d8d0f27f9107363fc46186de3f4132ca6ddb93baea62b5b67f2f8c432d2fc0920433bb101e34ed9b19759973d65a8631c28435e3cd9c467109ae36d3c259a4cec3ffdbd10f27d84f45fcd525fa0902042b0dbee631cf8b886b777df751be4b09f577c8b",
			"0x1b114a976408f9a71b4957f49cf72e295822f95020d5cd5ff3113f9f4dec110f657a391d5092a984a9ae2a1ff941eefb0a73f58e0bb8b5e5f9373f15abb70caddf47700efb9eba900f3640cb1903091cfd1dc27516e248f1eca11e6c0bb72ab4699eb1fd4ce0af630a1c206b8b4814923921c213439148afb8e49bbcba9d61a3c616a3a312533e4847c441fe68d7110b8f384ff2342c321eafceb4fee54936c89f8b4419fb31dba996050cc0251ee5e63170a38a7eefcd41b393808653384d30e31079516b3046d5ac81cf12c184337c2bbddde9384f",
			"0x4a2c1108cc823ae0c511b5f0ef802c98569efa8459cf063ed53bdaa8545cfec632547c37b696ab0d882782f380a6cec06471250fe3088762286de3cbfe18be95ea4791b2a33cdacfc4bdcb5d5934ba2e6a9c2d3109fc937cba2b2e9f93b5084ec1eb9567965330fe94c0cc7504202a68f4ba957e0890644bca8610c5666642e6edae54436330a3bb531d29710c321dd33d05157be6f32b2248089d188eb3654d42b331d8a9d8dcd746aad7ddda50bc189384a3",
			"0x725fb2462733c2880ff0b806ab412a82dbd537782c497b96a053836258246d894b5e525be09db6e50f38fe2da781a6d4f7ef2403eb47c69b67a594cb33cc3fcc9567716cebbf3250c8a89fa5b35ce66e37101f78272da36a294f9df60c009c2997cd88212b406f151054a462ed161f417266f2cab364773ed95a6d89df2a8aa033ef16fff00f041b0ddda31d2aa4e38753",
			"0x9b595726750f55bc2828d52bc8fe2780d14079d72b42aff5613d459e5bf83962bdeb21ed52d6b9ff5771cd90def77e6c730d2701f37845fa43e386328745eea4a45fc153de605a8f5f3d2dda1a88279416ef7e249e27a74f71848e9cd9cc534331a96c0bb3ce",
			"0xab6cb89990a3ecf4920c84c0ab3e846e8f6f9e1181ace3ad0df4c55e3ff058bc09a5634ffdf9a15965056945c89a771ec2ea28a5e2b736737a5cb7faba7e919b6f55a5f7d0c95a0f09d1c0175cc854f8f80eeed2ac41e2223e2aa40f5633c2bec2f460dd4c5ba5730ab59ec8da1d12b06b67ba21e17e86151c512758b4a492b3815d9ab0d8c8c97bc6721c05f318ff2dc2e250b69773180791b98bed78bcc41aa82c76c46493a215161f09521b0fe52540a8cf4d33ff9f5d1cbf6b99122078e627c017e7",
			"0xca275b9ee8df6f2c2cd908c5a2c8f15cc44abf8c6ca53887e45d1aa9432cc72563",
			"0xfb3a5abe2f6ee9617615faf169ca6fcbe2ebdcb78f1f2d93b635f66249f2b35b90064005f6f990bb87593cd25d0eb001dbc62ab7f247a24e18d29eb25e9dfc2ae97c9842c0a8914f43f3e35cad1d401ebb919ababe4ec0f5f5c49c9b6bec0091eba6180242806c14165f2cb0e06c7760a5ebee1152daaeab7d9724e9f04bd3c0fec10edcb60d984c9e6c45edbda552dc66f2f7945bcb6f98e698112a68572dfb758734590f250674724c913e584475c7c4bcd19c227b367373a86ee769e61b33850dfabdb74e734b7c83d31b0586a847adf70d4760991c9e10b4f1497ee250973fa2b38c12510e1917d3549bd196c974516a93218812f6",
			"0x1b97bb9f4bb472e89f5b1484f25209c9d9343e92ba09dd9d52dfd79b4d76429b617a0c9f9f0d3ba55b0cc0d6144c888535841acbe0709b0758083f61d375bc02b41df4f91929e18fda9e6f82e54e748e81e79e4b",
			"0x0b8ae00c99180aa1f973d068b7d186c3b9776353d44212732257675a30368f86be2cd6b21556fc2e4827",
			"0x3b65e35bf4a097d54334867df2580332eff88595d5bb66adb1009aa734fe5d2c28802514382d0c07ccdb93e7343bc0c941661c4fbb07ffe95ec179b25acdcb10eee4bf050d4709d37aecd032bda360f421ea9d29de7c21f868fdf7082ea02f427ea9d490477044bea34c571037fbb6a6dcc734e8ed8ad75d0fd2f5bbd3884390a58884e621a606",
			"0x5b5fa4c34c434e0dddfcb88161f18120bdd7a247e0b55a94edf89c613882fa7d39fdec27d2713761d6f6f349e4dab8d79c441e11a83894599af554b2add279c7f8ea02bfbaf361521e7a447200c39d0a8be679faf4962c4d50bb041ebbe60cdacef8c8e15fe5820a2a090feb7452f384db7175e43706cdc11ec6ca814d0404529b95c8e79a8e6da86205e7af415f42a119867528bec28e199b5fec183b1bdc7c85c389501e840f1e756d1e284dff8d7e11febf6a8d9b68060fedd47038c7f7736bbeba55aff79d990c7d71da05cb2c5f6a35c26e3351f0c3c81c3133ec3b7c3ce9068e217f",
			"0x6c52ebc273f1da454751880ebff54e9e52f70339111f8faadbff509b3f2aa9d59583b6ca34f9696a1e2f6e440c9591fd30a21b95ee77e560c92ccd5ee1113baee7ea4163174f81925512f00002efcdff6368b18a73d9df009ed0fc8533e9bad340d4ac1c798f8a4aa82edb173c4a461799d6e8dea151dfb472980b8747414484e2c9fa7a2f6ad039c660ad58e7598018b97e0931a5b7e61d5858850362960a13a51e3356856f6d4de695976e213be5691a0e449cc5965eb3d980",
			"0x8badec518fdc716a503f743335804c0ca64a29832f1844a3c52916642a064675ff4b045c5b9d6852e5c60a1973e571e589801f85fec82c01316f215e3bf5e796f28aa5fa80d0d0119f60855c5c177be0db9c42c989ca3af2e447e53800a0e16fc6aba006361fc9012db20b63a861c1ec137086e1682bf657847cd44af379cc46e9744c577e4a37596e9acb9b0bec9c533e571d2e822abe49",
			"0xbbc08f211d4803a2aa97e24900c149f753432add26917c1a60a104a22d8e0437dc96d2b6d554ffdb1784924d69f949a3fdde4f971008157a70e66fbd6f8f9abd3d53c2f2c833f85296f250668d48bd548f7a9a907dc41dddd445fd8e898abeaa54fb84d04d6a4907a356e78d8e5187cd121adb6e0e",
			"0xd47cf47f78fc8a5a54b0854efa8b46e5422768173e7c90e44acbfc6731309154ed091b9af7ec52c6eb1316a4d803a237985c0dbbd038eab8901a055ec38d30a5acc2749577ac0052d9e9e4",
			"0x0b90659790bafc92adb828e33a4b64638154a90f70f5c4bb8f221ca71590df615719a5ec1171900e",
			"0x3cebcae9b7ee8dc6b77414c0d7cb6151d871eeb545eef949628c3f611c881e38b4116ece77e8c62748e5297fa9387ad36b57115d43c14d0db69347be0de3a434c2b074f15db230953921063991c8d35e6ef37e06880aa6d156ec5bbe0b3247f778023066943ec74a2bc513307df7840749f66216870d2ffde5a835a2deb2",
			"0x5cde2da353e4200f214bd6d4ca4c5b40164e00847d58aee276c3e1a21f3c5b49058cbc211af1438218a1c90560ab52f107f550512cf8de4fd5c9eb0e4231241ef1cf525a527678d5d0ca9176880909703e7febabb34419908dcd6d34d874d6b2f0cb14a19db027659d81eada22efb7e244a13756b2ac2c5f373deb6e14687d21bd9c3631d328e06d4eeb112d35a0434e91697ccbcb06eeef1c02eaae146e239b843a47d4e544c48231b5bc195d6089caebd3b4a9190da664a4fb43718ba8d57947e860a02921f827b7b71492d82c3941d777d34d48242bb3b3235c",
			"0x6cd850eca0a7ac46bb1748d7b9cb88aa3bd21c57d852c28198ad8fa422c4595032e88a4494b4778b36b944fe47a52b8c5cd312910139dfcb4147ab8e972cc456bcb063f25dd78f54c4d34679e03142c42c662af52947d45bdb6e555751334ace76a5080ab5a0256a1d259855dfc5c0b8023b25befbb13fd3684f9f755cbd3d63544c78ee2001452dd54633a7593ade0b183891a0a4e9c7844e1254005fbe592b1b89149a502c24b6e1dca44c158aebedf01beae9c30cabe16a",
			"0x14abd5c47c0be87b0454596baad2",
			"0x3ca6c6c5d4c176335eecf48fab57e316d19e83139dc52753ab6ed1a00ac894a65895a1f14ce4a9bda98218056f106496726d02075ac92d68a7b8955c1d722825f6efd14d937bff0c253c84439c8d2f2880a4d9463f741624121454616a8c3a6093d8e0af3277fc0e214f266ddabc8f207c7b494d2d576a11c9a5464200e545715106fc3c01c910a636c09e9823875ad0e4a0eb063d56f444f1b9da03bf87d2afe8ebcace28febe1a051a5d4b7009f50fd9a9d33b0ccd361beb48b236926387f193849631076f375b9ffbcd9d3e69401f98672b54d4144d862035346300137bb56ba977443f335f294514972f",
			"0x54f90b1f7c5e046b88f0109df098e0840414c530d72e5c2f1fe64f6311cc3136cab16e53b788a8e675377c5f160e5c6cca6b46074af8f8e0e7f6f1d0514ddfbc00bec204641f1f4d8c",
			"0x4c15316697d6979fd16277a1eb61de83d2b6c2d62d2870da5c8e5ba1159a6041e3e93ea6d9df622f0acc03602e7b3c185ea906c95139d77ed62e67c0a52298b4cf5d03e9dc9e6f4c7d23a52c35e29a4d19575639486f548c46d955ddaf4d0216e30398bbe05f431b1e2822f3fecb22dbb8c0a11ba26d86a9287c1bcd88546e05012d6eeac98516ba96de5e81e693bd38b9249264c7407c6654d231f09d8e68",
			"0x7ce86120a57411c86b4bc0371723fb6db7a707d625a1244f9c47dd66f7519d0930218a095004533956827f38651b157dd3e7456d9f88d8ffeda34d70d712318bfa652491b2417f8c443459262d025032c65aaabd5fa26fed95d2be502d30d39052dd9ca5e8f7832c9dc4eecd81232c6ab36b2e7c036a911b1a105211",
			"0x95e3e66700a59d00d50f7c1cb4a8e9dbd5594914fa8b59698fcf14a4fbc59b98a1ba519b798c0da36aa4e272a3f66c092fe5078d91c12b7b2ce20911664fa9c245c68144c7bd9f8fff2ee596692e78c27199",
			"0xaddd876a98e12334ef173c31a77be6c91c3887996d049280f188ee65ff1d6a8d7e8063b58bc3e76a98585ac16b7545",
			"0xd430ab7160e3c2ec387454cde6",
			"0xfd2b2a8abbbc4624e2206be2a6863db75271ad1d4078da5fae294e63ead175b7e4bbf82b9c9f3ddea7a86ec23ac31df1977e1ba32788e093fec805e021b3c838ca4330f9a6071e907f7db90783b4a9bcaf4b8edd16eaabd1f158aed7872226186eb32c05af9681b594c7e24a8c79958ae9b15bd4e7f7c531fbfc9f6833cdff4fa20fe854196317fb31aeffe717e81b47fcc674413c6872eccf97a50178e8477c60928892cfddd3fd100dabe07d33f297f38f58aac635f50858ca9f66e7437807a2aec3d2d197e15b0a20c245217b32e76a10b4b2427b052819404b8797b498761a59",
			"0x15ffcad1487800293cb7aff4c14ebba4bf8a0e4358618776ee9196a1eda5d2215678420d0f98f277f33b1125b2a5f5ac2cbc5b450ab90932dd061810765e621f",
			"0x4c1b70a964ce916045f3641999c9389fc5062c01cadabb9e0b2b7f5ff05d11fd9e9a0a60393b0b5015f5891b426a56b9903a19699af8ac6e0d416833aa051a47c4539144e71d4e4fe0a5fa84c31d07a4c94f710a0fffda3986d3a9ef8da3eeedbcd9042abdb44074aa175fd2d870583f22f41b745c16e3c71e958c3beacbdfe4f1966bd8f41c99f386c4ebcba134ffa5123f5014d584f28c702729059b",
			"0x7d4eb12e7c8a1d999f7bd5aec55ad51d79594d97e1d4ef174053fe9df45b7d4b3cb2d783cf23a89a898c25f4b83f2f5500385de94f49ece54c782b02fe3ad42ecfbaa0fcf5c0a64f15baa61df749c4e8eb231e5c1d30aee074e913061a0ae6654eb0d87385ff56792ebd2aad91072fd7208e70",
			"0x956944e7e33cafcd089495aab6db420c974c72399b3e00964a8cb363db2fac48ad701c9d31fb02c49d4ea82c914507f996540dfdf68828c8a3b43fff31ae4d161ec32c94cf3bc58e40971be14a71f6298ea29aff140a89e1baae2779d35c4c80c108dccefe9097ddae7159482f7fe2afdb3832798d5fe8177f0bb208d07de8f10eeedecdd4e06266764238c063495921dfa06b3aa35f2666244afff0a9750cf26f8bbd5d7ea15ef6942a65ec76e40913bd8fd546b951c76421668605a6fca3d56e73548d0941fcb36223cbfc23a0581d",
			"0xae3c2bf03d642d85925cbbbfcda3bff94de2d3cbb237352fc033f7a6dfe70899fac9f3f05b1f568c0f61307b8993ff7bf8b24c5fedb78800e22b800f463204cd0851887910e30d8fd73fa7dacf9d2f9ec9261e88322dac5c0ace17cf5f8bab3b22dfb01f06ef1dea2e0631738f562a7c5a1225993113fab9700d9c8cb8b5a83416f0e01e89c0cb97301ae31a089ce12ca66986538674c9912d2119dbd1303b75966d8b03fa8b",
			"0xd5161c",
			"0xfd2941eea6ed3ee215ef983af89f1be381dc1237fbaa1d062e35d09ae6abf4d484edc225f41e88ff8718c44d0ebd37c90b2e51c3c147cf24edc3ea69d02f54d7e2b8aad45d866553d0900a0008f60c1422351d91bd593a28ef070de9658cffb0d5",
			"0x1685449300aed2197037a93fa85e18d1e00c380bf21432bf6f6d1862d1ef7235d2ff90480e531a572674678ed5bc105c5b4c0e95af78",
			"0x1579254268cf6352f977c54beb28153fe7c6789b",
			"0x3d548c31c260958763908c7002aa032d0485b68b86879ff6730ed7addc372e6318e2aaf4165f37bb77c23aede6a5c8226bc742295d092e36c4b2425192537c4d27a74198fe4cbd51a45dbf5b1d6b375c5d0efd04e4af83937242091838c0e29e7a0944bba117f42cacb4e78a52a4e47d4afbdea6220c56c2658eea2acaa859f619239dc8959e12792bebfa82ba8f9c41b8399b8c856ebf17e7e8601cecad42c73bc6d1a8239b4202aff969c8b0e5a268976981689feb90195ce674bec5efff16496c0edc099f68f88907de0c6645389c98891c384f83dedc812156e7ee8f682128f7112848b212d1c4e9093bd35bf7c5f2",
			"0x5667edd0d0682a4e7d5683059b2f1d2ca430b8885b70538b0e189a5abff97c7029787558913624a58335bedf1c07c199ba05421781485566fbe8f002e651da35d2e6bd3fcbb4d451cb434be376976c0012ca01dafba1120ada51836fb4a6cd19bcdd19a4ba4f3a882369b587673b5c0f49a3d5b68af44a35b532126fa963a1d130054fc42b77751ca428901556eabae37d192c75ac73718cbcc37a06843972606af99e4e7f81b33150ee12b60651c4e297c574b895e285cac7a1756afedc914e659e8ad3433a66",
			"0x6ea262f0ea06bc87c6b2530748b21a967764fd7b48ea476598cf9da0c3e1a92c86a3baaab37e292d58cb56f8ac58194664e343fb6a793be91a209e7d18bb886cdd1504e564321451a6f11e9eb4c796c197209215e9c2e5c0a9fb6aa24d491cd4157c1cdf1712bbaba87d6c925ef250ebc33c319e55495c59c7a419f7b6316104179c10c48256e02b2e08d1767cdcb787ad0f395289f606a811c1e35f8cbc98ca1158483d",
			"0x969c655e84994bbe206f991c9b4e178425473f0ba3e49c9cc4f85e6ac63d18fdef8f910c4ea21d07247f122fe4abf958d54146ffbcb810c9065e184e6c444a44acee908cc38f44926beeab6fb4f357066efc0ec1fddcc0e5ee8080f8c9870a0c66d4e8c90fa0112327132a7ddbf15dbac2e7b3d8bad477ccd80890018e28e9c50d428307093e45153342a5142077feda4a25cfcb3aeec04cff9c50f2122c7804af9b5593f8538237b3ae3aea9f0fcf753cd271f719432010038f70e05daeb5cea4e73eb3d765263275c489154cd6ec953072704ee2b87a5cfcef1d2aa4d849417b2a9eb5a4cdc0efd71788845c9e1974fd4899829adcceaa9248",
			"0xb6af06f1eb84c1f3c9732ff82d4e1482eaba7c24d95dd172dbf0a0abcd0555ac40ee519fb3ca82205819a1133ac5d13e299f439daa014cfc4594c88de2f1f93bd76dd68468104cd5dee93f73f01c8406326333467bc7e2",
			"0xd66aad2dc6d0442b148c868d2fd2f27058be7dc6b046050c88fa2063b169e355de05aec2d5514d78e4d3fd49f3baaa8dc69b47b1a3",
			"0x177e4e0e156ae1532dea2192c85b705fdea692b0a9c17522feb12aa1b43170a0474471dc4f764552b3ed75a07b0ea39e3bd937c591793638db4d2ceb6a9c43c9301c51cf191ec4d43f0161f8a988f21f57a19c57a02411cd62c565288c1d893d5fd2acbe0548d860a908f48b6cd83306fa83ad0b92ab957e6af34f9305515294c366489e5bd433c57e98",
			"0x3edaf1bfaeb6700797d296a853de9dc99de3d30dfbbaca6afa198e5bb8011f42a4737b2f76ae09dc77991095fae50272961737f3e5c8fc1b1b83d045b84afaa1db4b658389d6041507430d82edb0a5b03c17a4de9bfd3b15d258718e15d0c576c9aa98890fd016c9",
			"0x56cd76b0089ef740317b84cd5aa29ac7555e1198ee23ff638fd394adbc754de1f40f4b1189b5f4c383b594698031db9a281539b766093e973ab9965f0c73b7d82abb191b3a3833541a1ac0bd3ce1de45d1d2b28ab92f3f5d99eadd41d2de35cf5f7584e3567b1731a8d170b1671fa3b032096eb6c202a6d58919e9217e9453a0017ccac2399cffa597161466d12ac84675bde924b0c518d3145e480b8df27fc3e47458948c5fd90b1f04514f1c57c767b20bc6e7dd5bd49cae2c5fcbca80f2fb00e827c23d",
			"0xf7a7b791cf6aae777a57b5799768b8b592be52aa0b1d33f0c8ba84",
			"0x16bb76f0697e3baca45f827ea8a4b524f90f58e54397274b2315caa1660719227be161479591d327fa832706300494a600b13869797904776072187e921bc86720c3ec37c3d86355bab6df2f7d354c4da395119cc74c4d964c8fdfcee72fcaa47daf5c97dcb1ce02a50a0639fd2d7f24ec4d347c3771d16b0a10c1eabc0f9ab55e7f3e751ed9c7989830245393973fb1237a8f4b4412d933f8314f0720f4d7edb2fed6c69731b87e7f21e960535fcdc816d8e74846d35fc261b84d072c8e9260b6315cbf619e80339c1eb5cc3ca46160b9f5412deeb07396d9fe549f45fabaecea99e3f102be057491686a83417d4736eb1a315d15267305",
		},
	}
	for i, tc := range tcs {
		exp := types.DeriveSha(newFlatList(tc), newEmpty())
		got := types.DeriveSha(newFlatList(tc), NewStackTrie(nil))
		if !bytes.Equal(got[:], exp[:]) {
			t.Fatalf("case %d: got %x exp %x", i, got, exp)
		}
	}
}

// Verify key ordering - todo delete thisq
func xTestFoo(t *testing.T) {
	for i := 1; i <= 0x7f; i++ {
		d, _ := rlp.EncodeToBytes(uint(i))
		fmt.Printf("i %d => d: %x\n", i, d)
	}
	i := 0
	d, _ := rlp.EncodeToBytes(uint(i))
	fmt.Printf("i %d => d: %x\n", i, d)

	for i := 0x80; i < 0x88; i++ {
		d, _ := rlp.EncodeToBytes(uint(i))
		fmt.Printf("i %d => d: %x\n", i, d)
	}
}